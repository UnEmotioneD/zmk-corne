/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        less_then {
            bindings = <&kp LESS_THAN>;
            key-positions = <31 32>;
            timeout-ms = <150>;
            require-prior-idle-ms = <150>;
        };

        greater_then {
            bindings = <&kp GREATER_THAN>;
            key-positions = <32 33>;
            timeout-ms = <150>;
            require-prior-idle-ms = <150>;
        };

        zx_undo_mac {
            bindings = <&kp LG(Z)>;
            key-positions = <25 26>;
            timeout-ms = <60>;
            layers = <0 8 9>;
        };

        xv_cut_mac {
            bindings = <&kp LG(X)>;
            key-positions = <26 28>;
            timeout-ms = <60>;
            layers = <0 8 9>;
        };

        xc_copy_mac {
            bindings = <&kp LG(C)>;
            key-positions = <26 27>;
            timeout-ms = <60>;
            layers = <0 8 9>;
        };

        cv_paste_mac {
            bindings = <&kp LG(V)>;
            key-positions = <27 28>;
            timeout-ms = <60>;
            layers = <0 8 9>;
        };

        zx_undo_win {
            bindings = <&kp LC(Z)>;
            key-positions = <25 26>;
            timeout-ms = <60>;
            layers = <4>;
        };

        xv_cut_win {
            bindings = <&kp LC(X)>;
            key-positions = <26 28>;
            timeout-ms = <60>;
            layers = <4>;
        };

        xc_copy_win {
            bindings = <&kp LC(C)>;
            key-positions = <26 27>;
            timeout-ms = <60>;
            layers = <4>;
        };

        cv_past_win {
            bindings = <&kp LC(V)>;
            key-positions = <27 28>;
            timeout-ms = <60>;
            layers = <4>;
        };

        vim_search {
            bindings = <&vim_search>;
            key-positions = <15 16>;
            require-prior-idle-ms = <150>;
            layers = <2 6 11>;
        };

        jk_esc {
            bindings = <&kp ESCAPE>;
            key-positions = <19 20>;
            timeout-ms = <60>;
        };

        kl_enter {
            bindings = <&kp ENTER>;
            key-positions = <20 21>;
        };

        sd_tab {
            bindings = <&kp TAB>;
            key-positions = <14 15>;
        };

        df_bspc {
            bindings = <&kp BACKSPACE>;
            key-positions = <15 16>;
        };
    };

    macros {
        my_email: my_email {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp B &kp L &kp A &kp C &kp K &kp E &kp A &kp G &kp L &kp E &kp N1 &kp N0 &kp AT &kp I &kp C &kp L &kp O &kp U &kp D &kp DOT &kp C &kp O &kp M>;
            label = "MY_EMAIL";
        };

        vim_search: vim_search {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp PRCNT &kp S &kp FSLH>;
            label = "VIM_SEARCH";
        };

        dvorak_to_kor_mac: dvorak_lang {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F16 &to 9>;
            label = "DVORAK_LANG";
        };

        kor_to_dvorak_mac: kor_to_dvorak_mac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F16 &to 8>;
            label = "KOR_TO_DVORAK_MAC";
        };
    };

    behaviors {
        new_mt: new_mt {
            compatible = "zmk,behavior-hold-tap";
            label = "NEW_MT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            require-prior-idle-ms = <0>;
        };

        new_lt: new_lt {
            compatible = "zmk,behavior-hold-tap";
            label = "NEW_LT";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            require-prior-idle-ms = <0>;
        };

        right_hrm: right_hrm {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT_HRM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 19 20 21 22 39 40 41>;
            require-prior-idle-ms = <0>;
        };

        left_hrm: left_hrm {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_HRM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41 13 14 15 16 36 37 38>;
            require-prior-idle-ms = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        mac_base {
            bindings = <
&kp TILDE  &kp Q  &kp W                     &kp E                 &kp R                 &kp T    &kp Y  &kp U                   &kp I                   &kp O                       &kp P      &kp PIPE
&kp TAB    &kp A  &left_hrm LEFT_CONTROL S  &left_hrm LEFT_ALT D  &left_hrm LEFT_GUI F  &kp G    &kp H  &right_hrm RIGHT_GUI J  &right_hrm RIGHT_ALT K  &right_hrm RIGHT_CONTROL L  &kp SEMI   &kp SINGLE_QUOTE
&kp GRAVE  &kp Z  &kp X                     &kp C                 &kp V                 &kp B    &kp N  &kp M                   &kp COMMA               &kp DOT                     &kp SLASH  &kp BACKSLASH
                                            &kp GLOBE             &kp LEFT_SHIFT        &mo 1    &mo 2  &kp SPACE               &kp F16
            >;
        };

        mac_lower {
            bindings = <
&trans  &kp EXCLAMATION  &kp AT            &kp HASH           &kp DOLLAR      &kp PERCENT        &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans  &kp N1           &kp N2            &kp N3             &kp N4          &kp N5             &kp N6     &kp N7         &kp N8        &kp N9                &kp N0                 &kp DOUBLE_QUOTES
&trans  &none            &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE    &kp UNDER  &kp MINUS      &kp PLUS      &trans                &kp EQUAL              &trans
                                           &trans             &trans          &trans             &mo 3      &trans         &trans
            >;
        };

        mac_raise {
            bindings = <
&trans  &kp F9  &kp F10  &kp F11  &kp F12  &none              &kp C_MUTE  &kp PAGE_UP        &kp PAGE_DOWN  &kp C_PLAY  &kp DELETE            &trans
&trans  &kp F5  &kp F6   &kp F7   &kp F8   &kp HOME           &kp LEFT    &kp DOWN           &kp UP_ARROW   &kp RIGHT   &kp C_BRIGHTNESS_INC  &trans
&trans  &kp F1  &kp F2   &kp F3   &kp F4   &kp END            &kp C_PREV  &kp C_VOLUME_DOWN  &kp C_VOL_UP   &kp C_NEXT  &kp C_BRIGHTNESS_DEC  &trans
                         &trans   &trans   &new_lt 3 ENTER    &trans      &trans             &trans
            >;
        };

        mac_adjust {
            bindings = <
&trans  &kp LA(LG(L))  &kp LG(NUMBER_1)  &kp LG(NUMBER_4)  &kp LG(NUMBER_6)   &kp LS(LC(R))      &bt BT_CLR            &kp LG(NUMBER_1)      &kp LG(NUMBER_2)  &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2
&to 8   &kp LA(LG(Q))  &kp LG(F12)       &kp LC(PAGE_UP)   &kp LC(PAGE_DOWN)  &kp LS(LG(F11))    &kp LC(F5)            &kp LC(GRAVE)         &kp LS(LG(M))     &kp LS(LG(E))  &kp LS(LG(P))  &to 4
&trans  &kp LS(LG(F))  &kp LS(LG(O))     &kp LA(LG(R))     &kp LA(LG(S))      &kp F2             &kp LS(LG(NUMBER_3))  &kp LS(LG(NUMBER_4))  &kp F6            &kp LS(LC(G))  &kp LS(LA(F))  &my_email
                                         &trans            &trans             &trans             &trans                &trans                &trans
            >;
        };

        windows_base {
            bindings = <
&kp TILDE  &kp Q  &kp W                     &kp E                 &kp R                 &kp T    &kp Y  &kp U                  &kp I                  &kp O                      &kp P     &kp PIPE
&kp TAB    &kp A  &left_hrm LEFT_CONTROL S  &left_hrm LEFT_GUI D  &left_hrm LEFT_ALT F  &kp G    &kp H  &right_hrm LEFT_ALT J  &right_hrm LEFT_GUI K  &right_hrm LEFT_CONTROL L  &kp SEMI  &kp SINGLE_QUOTE
&kp GRAVE  &kp Z  &kp X                     &kp C                 &kp V                 &kp B    &kp N  &kp M                  &kp COMMA              &kp DOT                    &kp FSLH  &kp BACKSLASH
                                            &kp CAPSLOCK          &kp LEFT_SHIFT        &mo 5    &mo 6  &kp SPACE              &kp RIGHT_ALT
            >;
        };

        windows_lower {
            bindings = <
&trans  &kp EXCLAMATION  &kp AT_SIGN       &kp HASH           &kp DOLLAR      &kp PERCENT        &kp CARET       &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans  &kp N1           &kp N2            &kp N3             &kp N4          &kp N5             &kp N6          &kp N7         &kp N8        &kp N9                &kp N0                 &kp DOUBLE_QUOTES
&trans  &none            &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE    &kp UNDERSCORE  &kp MINUS      &kp PLUS      &trans                &kp EQUAL              &trans
                                           &trans             &trans          &trans             &mo 7           &trans         &trans
            >;
        };

        windows_raise {
            bindings = <
&trans  &kp F9  &kp F10  &kp F11  &kp F12  &none              &kp C_MUTE      &kp PAGE_UP        &kp C_BRIGHTNESS_DEC  &kp C_PLAY  &kp DELETE            &trans
&trans  &kp F5  &kp F6   &kp F7   &kp F8   &kp HOME           &kp LEFT        &kp DOWN           &kp UP_ARROW          &kp RIGHT   &kp C_BRIGHTNESS_INC  &none
&trans  &kp F1  &kp F2   &kp F3   &kp F4   &kp END            &kp C_PREVIOUS  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP       &kp C_NEXT  &kp C_BRIGHTNESS_DEC  &trans
                         &trans   &trans   &new_lt 7 ENTER    &trans          &trans             &trans
            >;
        };

        windows_adjust {
            bindings = <
&trans  &kp LC(LA(L))  &kp LA(NUMBER_1)  &kp LA(NUMBER_4)  &kp LA(NUMBER_6)   &kp LS(F10)    &bt BT_CLR  &kp LC(NUMBER_1)  &kp LC(NUMBER_2)  &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2
&to 0   &kp LS(LA(Q))  &kp F12           &kp LC(PAGE_UP)   &kp LC(PAGE_DOWN)  &kp LC(F11)    &kp LC(F5)  &kp LC(GRAVE)     &kp LS(LC(M))     &kp LS(LC(E))  &kp LS(LC(P))  &trans
&trans  &kp LS(LC(F))  &kp LS(LC(O))     &kp LS(LA(R))     &kp LS(LA(S))      &kp F2         &kp LA(F4)  &kp PRINTSCREEN   &kp F6            &kp LS(LC(G))  &kp LS(LA(F))  &my_email
                                         &trans            &trans             &trans         &trans      &trans            &trans
            >;
        };

        mac_dvorak_eng {
            bindings = <
&kp TILDE  &kp APOS  &kp COMMA                 &kp DOT               &kp P                 &kp Y     &kp F   &kp G                   &kp C                   &kp R                       &kp L  &kp SLASH
&kp TAB    &kp A     &left_hrm LEFT_CONTROL O  &left_hrm LEFT_ALT E  &left_hrm LEFT_GUI U  &kp I     &kp D   &right_hrm RIGHT_GUI H  &right_hrm RIGHT_ALT T  &right_hrm RIGHT_CONTROL N  &kp S  &kp BACKSLASH
&kp GRAVE  &kp SEMI  &kp Q                     &kp J                 &kp K                 &kp X     &kp B   &kp M                   &kp W                   &kp V                       &kp Z  &none
                                               &kp CAPSLOCK          &kp LEFT_SHIFT        &mo 10    &mo 11  &kp SPACE               &dvorak_to_kor_mac
            >;
        };

        mac_dvorak_kor {
            bindings = <
&kp TILDE  &kp Q  &kp W                     &kp E                 &kp R                 &kp T     &kp Y   &kp U                   &kp I                   &kp O                       &kp P     &kp PIPE
&kp TAB    &kp A  &left_hrm LEFT_CONTROL S  &left_hrm LEFT_ALT D  &left_hrm LEFT_GUI F  &kp G     &kp H   &right_hrm RIGHT_GUI J  &right_hrm RIGHT_ALT K  &right_hrm RIGHT_CONTROL L  &kp SEMI  &kp APOS
&kp GRAVE  &kp Z  &kp X                     &kp C                 &kp V                 &kp B     &kp N   &kp M                   &kp COMMA               &kp DOT                     &kp FSLH  &kp BACKSLASH
                                            &kp GLOBE             &kp LEFT_SHIFT        &mo 10    &mo 11  &kp SPACE               &kor_to_dvorak_mac
            >;
        };

        mac_dvorak_lower {
            bindings = <
&trans  &kp EXCLAMATION  &kp AT            &kp HASH           &kp DOLLAR      &kp PERCENT        &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans  &kp N1           &kp N2            &kp N3             &kp N4          &kp N5             &kp N6     &kp N7         &kp N8        &kp N9                &kp N0                 &trans
&trans  &none            &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE    &kp MINUS  &kp MINUS      &kp PLUS      &trans                &kp EQUAL              &trans
                                           &trans             &trans          &trans             &mo 12     &trans         &trans
            >;
        };

        mac_dvorak_raise {
            bindings = <
&trans  &kp F9  &kp F10  &kp F11  &kp F12  &none               &kp C_MUTE  &kp PAGE_UP        &kp PAGE_DOWN  &kp C_PLAY  &kp DELETE            &trans
&trans  &kp F5  &kp F6   &kp F7   &kp F8   &kp HOME            &kp LEFT    &kp DOWN           &kp UP_ARROW   &kp RIGHT   &kp C_BRIGHTNESS_INC  &trans
&trans  &kp F1  &kp F2   &kp F3   &kp F4   &kp END             &kp C_PREV  &kp C_VOLUME_DOWN  &kp C_VOL_UP   &kp C_NEXT  &kp C_BRIGHTNESS_DEC  &trans
                         &trans   &trans   &new_lt 12 ENTER    &trans      &trans             &trans
            >;
        };

        mac_dvorak_adjust {
            bindings = <
&trans  &kp LA(LG(L))  &kp LG(NUMBER_1)  &kp LG(NUMBER_4)  &kp LG(NUMBER_6)   &kp LS(LC(R))      &bt BT_CLR            &kp LG(NUMBER_1)      &kp LG(NUMBER_2)  &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2
&to 0   &kp LA(LG(Q))  &kp LG(F12)       &kp LC(PAGE_UP)   &kp LC(PAGE_DOWN)  &kp LS(LG(F11))    &kp LC(F5)            &kp LC(GRAVE)         &kp LS(LG(M))     &kp LS(LG(E))  &kp LS(LG(P))  &to 4
&trans  &kp LS(LG(F))  &kp LS(LG(O))     &kp LA(LG(R))     &kp LA(LG(S))      &kp F2             &kp LS(LG(NUMBER_3))  &kp LS(LG(NUMBER_4))  &kp F6            &kp LS(LC(G))  &kp LS(LA(F))  &my_email
                                         &trans            &trans             &trans             &trans                &trans                &trans
            >;
        };
    };
};
